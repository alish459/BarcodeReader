<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="toolStripButton1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>